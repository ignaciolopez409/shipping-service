name: CI Build
on:
  push:
    branches:
      - develop
      - test
jobs:
  QUALITY_GATES_AND_TEST:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[sonar skip]') || github.ref == 'refs/heads/develop'"
    env:
      PROJECT: "shipping"
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Analysis and Wait for Quality Gate
        run: |
          ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.host.url="https://sonarcloud.io" \
          -Dsonar.organization=obligatorio-devops-2021 \
          -Dsonar.projectKey=$PROJECT-service-obligatorio \
  BUILD_AND_PUSH_IMAGE:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    needs: ['QUALITY_GATES_AND_TEST']
    steps:
      # Checkout
      - uses: actions/checkout@v2
      # JDK 8 para build
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build project with Maven
        run: "./mvnw -B package -Pjib -Djib.to.auth.username=${{ secrets.HUB_DOCKER_USERNAME }} -Djib.to.auth.password=${{ secrets.HUB_DOCKER_PASSWORD }}"
      - name: Extract branch name
        shell: bash
        run: |
          VERSION=$(./mvnw -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=pom_version;]$(echo $VERSION)"
        id: compile_output
    outputs:
      POM_VERSION: ${{ steps.compile_output.outputs.pom_version }}
      BRANCH: ${{ steps.compile_output.outputs.branch }}
  DEPLOY:
    runs-on: ubuntu-latest
    needs: ['BUILD_AND_PUSH_IMAGE']
    env:
      INFRA_BRANCH: "main"
      INFRA_REPO_URL: "ignaciolopez409/infra-obligatorio-devops"
      PROJECT: "shipping"
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          repository: ${{ env.INFRA_REPO_URL }}
          persist-credentials: false
          token: ${{ secrets.PUSH_TOKEN }}
          ref: ${{ env.INFRA_BRANCH }}
      - run: |
          POM_VERSION="${{ needs.BUILD_AND_PUSH_IMAGE.outputs.POM_VERSION }}"
          BRANCH="${{ needs.BUILD_AND_PUSH_IMAGE.outputs.BRANCH }}"
          PROJECT="shipping"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          sed "s/tag: *.*/tag: $POM_VERSION/" -i environments/$BRANCH/values/$PROJECT.yaml
          if [ $(git status --porcelain | wc -l) -eq "0" ]; then
            echo "ðŸ”˜ $PROJECT -> Not updated $POM_VERSION in $BRANCH."
            NEED_PUSH=false
          else
            MSG="ðŸŸ¢ $PROJECT -> Updated $POM_VERSION in $BRANCH. Executing [CD] | $BRANCH"
            NEED_PUSH=true
            echo "$MSG"
            git add environments/$BRANCH/values/$PROJECT.yaml
            git commit -m "$MSG"
          fi
          echo "##[set-output name=pom_version;]$(echo $NEED_PUSH)"
      - name: Push changes
        uses: ad-m/github-push-action@master
        if: ${{ steps.compile_output.outputs.pom_version }} == "true"
        with:
          github_token: ${{ secrets.PUSH_TOKEN }}
          branch: ${{ env.INFRA_BRANCH }}
          repository: ${{ env.INFRA_REPO_URL }}